{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshepiso Selemela\\\\OneDrive\\\\Documents\\\\Tymstamp\\\\FrontEnd\\\\my-app\\\\src\\\\pages\\\\ClockInOutGPS.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../api/apiService';\nimport FacialRecognitionModal from '../components/FacialRecognitionModal';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  message,\n  onClose\n}) => {\n  if (!message) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-backdrop\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Modal;\nconst ClockInOutGPS = () => {\n  _s();\n  const [todaysAttendance, setTodaysAttendance] = useState(null);\n  const [isClockedIn, setIsClockedIn] = useState(false);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [modalMessage, setModalMessage] = useState('');\n\n  // State to control the new facial recognition modal\n  const [isFaceModalOpen, setIsFaceModalOpen] = useState(false);\n  const fetchTodaysAttendance = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data\n      } = await apiService.get('/attendance/today');\n      if (data && data.id && data.clock_in_time) {\n        setTodaysAttendance(data);\n        setIsClockedIn(!data.clock_out_time);\n      } else {\n        setTodaysAttendance(null);\n        setIsClockedIn(false);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch today's attendance:\", err);\n      setTodaysAttendance(null);\n      setIsClockedIn(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTodaysAttendance();\n  }, []);\n\n  /**\r\n   * This function is called AFTER the face has been captured.\r\n   * It receives the captured image and sends it to the backend.\r\n   * @param {string} faceImage - The base64 encoded image data from the camera.\r\n   */\n  const handleClockInWithFace = async faceImage => {\n    setLoading(true);\n    setError(null);\n    try {\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          timeout: 10000\n        });\n      });\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n\n      // In the future, this will call a new verification endpoint.\n      // For now, it calls the original clock-in endpoint.\n      await apiService.post('/attendance/clock-in', {\n        latitude,\n        longitude,\n        face_image: faceImage // The captured image is sent with the request\n      });\n      setModalMessage('Successfully clocked in!');\n      fetchTodaysAttendance();\n    } catch (err) {\n      handleApiError(err, 'in');\n    }\n  };\n\n  //  Handles the clock-out process, which does not require facial recognition.\n\n  const handleClockOut = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          timeout: 10000\n        });\n      });\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      await apiService.post('/attendance/clock-out', {\n        latitude,\n        longitude\n      });\n      setModalMessage('Successfully clocked out!');\n      fetchTodaysAttendance();\n    } catch (err) {\n      handleApiError(err, 'out');\n    }\n  };\n\n  /**\r\n   * Centralized error handler for API calls.\r\n   * @param {Error} err - The error object.\r\n   * @param {string} type - 'in' or 'out'.\r\n   */\n  const handleApiError = (err, type) => {\n    var _err$response, _err$response$data;\n    let errorMessage = `Failed to clock ${type}.`;\n    if (err.code && err.code === err.PERMISSION_DENIED) {\n      errorMessage = \"Geolocation permission denied. Please enable location services.\";\n    } else if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.message) {\n      errorMessage = err.response.data.message;\n    }\n    setError(errorMessage);\n    console.error(`Clock-${type} failed:`, err);\n    setLoading(false);\n  };\n  const getStatusMessage = () => {\n    if (loading) return \"Loading status...\";\n    if (isClockedIn && todaysAttendance) {\n      return `Clocked In at ${new Date(todaysAttendance.clock_in_time).toLocaleTimeString()}`;\n    }\n    return \"Clocked Out\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      message: modalMessage,\n      onClose: () => setModalMessage('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FacialRecognitionModal, {\n      isOpen: isFaceModalOpen,\n      onClose: () => setIsFaceModalOpen(false),\n      onCapture: handleClockInWithFace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock-in-out\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock-status\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 16\n          }, this), \" \", getStatusMessage()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isClockedIn ? handleClockOut : () => setIsFaceModalOpen(true),\n          className: `clock-btn-enhanced ${isClockedIn ? 'out' : 'in'}`,\n          disabled: loading || todaysAttendance && todaysAttendance.clock_out_time,\n          children: loading ? 'Processing...' : isClockedIn ? 'Clock Out' : 'Clock In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), todaysAttendance && todaysAttendance.clock_out_time && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '1.5rem',\n          color: '#00cec9',\n          textAlign: 'center'\n        },\n        children: \"You have already clocked in and out for today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClockInOutGPS, \"zWUsKDx7UbCipLFDFWwBIpv2HdA=\");\n_c2 = ClockInOutGPS;\nexport default ClockInOutGPS;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"ClockInOutGPS\");","map":{"version":3,"names":["React","useState","useEffect","apiService","FacialRecognitionModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","message","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","ClockInOutGPS","_s","todaysAttendance","setTodaysAttendance","isClockedIn","setIsClockedIn","error","setError","loading","setLoading","modalMessage","setModalMessage","isFaceModalOpen","setIsFaceModalOpen","fetchTodaysAttendance","data","get","id","clock_in_time","clock_out_time","err","console","handleClockInWithFace","faceImage","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","timeout","latitude","longitude","coords","post","face_image","handleApiError","handleClockOut","type","_err$response","_err$response$data","errorMessage","code","PERMISSION_DENIED","response","getStatusMessage","Date","toLocaleTimeString","isOpen","onCapture","disabled","style","marginTop","color","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/pages/ClockInOutGPS.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiService from '../api/apiService';\r\nimport FacialRecognitionModal from '../components/FacialRecognitionModal';\r\nimport '../App.css';\r\n\r\nconst Modal = ({ message, onClose }) => {\r\n  if (!message) return null;\r\n\r\n  return (\r\n    <div className=\"modal-backdrop\">\r\n      <div className=\"modal-content\">\r\n        <p>{message}</p>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ClockInOutGPS = () => {\r\n  const [todaysAttendance, setTodaysAttendance] = useState(null);\r\n  const [isClockedIn, setIsClockedIn] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [modalMessage, setModalMessage] = useState('');\r\n  \r\n  // State to control the new facial recognition modal\r\n  const [isFaceModalOpen, setIsFaceModalOpen] = useState(false);\r\n\r\n  const fetchTodaysAttendance = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const { data } = await apiService.get('/attendance/today');\r\n      \r\n      if (data && data.id && data.clock_in_time) {\r\n        setTodaysAttendance(data);\r\n        setIsClockedIn(!data.clock_out_time);\r\n      } else {\r\n        setTodaysAttendance(null);\r\n        setIsClockedIn(false);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch today's attendance:\", err);\r\n      setTodaysAttendance(null);\r\n      setIsClockedIn(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTodaysAttendance();\r\n  }, []);\r\n\r\n  /**\r\n   * This function is called AFTER the face has been captured.\r\n   * It receives the captured image and sends it to the backend.\r\n   * @param {string} faceImage - The base64 encoded image data from the camera.\r\n   */\r\n  const handleClockInWithFace = async (faceImage) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, { timeout: 10000 });\r\n      });\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      // In the future, this will call a new verification endpoint.\r\n      // For now, it calls the original clock-in endpoint.\r\n      await apiService.post('/attendance/clock-in', { \r\n        latitude, \r\n        longitude,\r\n        face_image: faceImage // The captured image is sent with the request\r\n      });\r\n\r\n      setModalMessage('Successfully clocked in!');\r\n      fetchTodaysAttendance();\r\n\r\n    } catch (err) {\r\n      handleApiError(err, 'in');\r\n    }\r\n  };\r\n\r\n  \r\n  //  Handles the clock-out process, which does not require facial recognition.\r\n   \r\n  const handleClockOut = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, { timeout: 10000 });\r\n      });\r\n      const { latitude, longitude } = position.coords;\r\n      \r\n      await apiService.post('/attendance/clock-out', { latitude, longitude });\r\n      setModalMessage('Successfully clocked out!');\r\n      fetchTodaysAttendance();\r\n    } catch (err) {\r\n      handleApiError(err, 'out');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Centralized error handler for API calls.\r\n   * @param {Error} err - The error object.\r\n   * @param {string} type - 'in' or 'out'.\r\n   */\r\n  const handleApiError = (err, type) => {\r\n    let errorMessage = `Failed to clock ${type}.`;\r\n    if (err.code && err.code === err.PERMISSION_DENIED) {\r\n        errorMessage = \"Geolocation permission denied. Please enable location services.\";\r\n    } else if (err.response?.data?.message) {\r\n        errorMessage = err.response.data.message;\r\n    }\r\n    setError(errorMessage);\r\n    console.error(`Clock-${type} failed:`, err);\r\n    setLoading(false);\r\n  };\r\n\r\n  const getStatusMessage = () => {\r\n      if (loading) return \"Loading status...\";\r\n      if (isClockedIn && todaysAttendance) {\r\n          return `Clocked In at ${new Date(todaysAttendance.clock_in_time).toLocaleTimeString()}`;\r\n      }\r\n      return \"Clocked Out\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>{/* The existing modal styles remain here */}</style>\r\n      <Modal message={modalMessage} onClose={() => setModalMessage('')} />\r\n\r\n      {/* The new Facial Recognition Modal */}\r\n      <FacialRecognitionModal\r\n        isOpen={isFaceModalOpen}\r\n        onClose={() => setIsFaceModalOpen(false)}\r\n        onCapture={handleClockInWithFace}\r\n      />\r\n\r\n      <div className=\"clock-in-out\">\r\n        <div className=\"clock-status\">\r\n            <p><strong>Current Status:</strong> {getStatusMessage()}</p>\r\n        </div>\r\n\r\n        {error && <div className=\"error\">{error}</div>}\r\n\r\n        <div className=\"clock-buttons\">\r\n          <button \r\n            onClick={isClockedIn ? handleClockOut : () => setIsFaceModalOpen(true)} \r\n            className={`clock-btn-enhanced ${isClockedIn ? 'out' : 'in'}`} \r\n            disabled={loading || (todaysAttendance && todaysAttendance.clock_out_time)}\r\n          >\r\n            {loading ? 'Processing...' : (isClockedIn ? 'Clock Out' : 'Clock In')}\r\n          </button>\r\n        </div>\r\n\r\n        {todaysAttendance && todaysAttendance.clock_out_time && (\r\n            <p style={{marginTop: '1.5rem', color: '#00cec9', textAlign: 'center'}}>\r\n              You have already clocked in and out for today.\r\n            </p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClockInOutGPS;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}