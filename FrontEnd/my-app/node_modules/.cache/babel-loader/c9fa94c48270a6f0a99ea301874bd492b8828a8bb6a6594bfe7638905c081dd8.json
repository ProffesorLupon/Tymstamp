{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshepiso Selemela\\\\OneDrive\\\\Documents\\\\Tymstamp\\\\FrontEnd\\\\my-app\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport apiService from '../api/apiService';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [token, setToken] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Extract token and email from the URL query parameters\n    const tokenFromUrl = window.location.pathname.split('/').pop();\n    const emailFromUrl = searchParams.get('email');\n    setToken(tokenFromUrl);\n    setEmail(emailFromUrl);\n    if (!tokenFromUrl || !emailFromUrl) {\n      setError(\"Invalid password reset link. Please request a new one.\");\n    }\n  }, [searchParams]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setMessage('');\n    if (password !== passwordConfirmation) {\n      setError(\"Passwords do not match.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await apiService.post('/reset-password', {\n        token,\n        email,\n        password,\n        password_confirmation: passwordConfirmation\n      });\n      setMessage(response.data.message + \" You will be redirected to login shortly.\");\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred. Please try again.';\n      setError(errorMessage);\n      console.error('Reset password failed:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green',\n          marginBottom: '1rem'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          readOnly: true // Email should not be changed by the user\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          value: passwordConfirmation,\n          onChange: e => setPasswordConfirmation(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !token,\n          children: loading ? 'Resetting...' : 'Reset Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"ZfEgWki4S8OJ/O9NnJWkdA1s8P8=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","apiService","jsxDEV","_jsxDEV","ResetPassword","_s","navigate","searchParams","token","setToken","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","message","setMessage","error","setError","loading","setLoading","tokenFromUrl","window","location","pathname","split","pop","emailFromUrl","get","handleSubmit","e","preventDefault","response","post","password_confirmation","data","setTimeout","err","_err$response","_err$response$data","errorMessage","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","onSubmit","type","placeholder","value","onChange","target","readOnly","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport apiService from '../api/apiService';\r\nimport '../App.css';\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  \r\n  const [token, setToken] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n  \r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Extract token and email from the URL query parameters\r\n    const tokenFromUrl = window.location.pathname.split('/').pop();\r\n    const emailFromUrl = searchParams.get('email');\r\n    setToken(tokenFromUrl);\r\n    setEmail(emailFromUrl);\r\n\r\n    if (!tokenFromUrl || !emailFromUrl) {\r\n        setError(\"Invalid password reset link. Please request a new one.\");\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n\r\n    if (password !== passwordConfirmation) {\r\n        setError(\"Passwords do not match.\");\r\n        setLoading(false);\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const response = await apiService.post('/reset-password', {\r\n        token,\r\n        email,\r\n        password,\r\n        password_confirmation: passwordConfirmation,\r\n      });\r\n      setMessage(response.data.message + \" You will be redirected to login shortly.\");\r\n      setTimeout(() => navigate('/login'), 3000);\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'An error occurred. Please try again.';\r\n      setError(errorMessage);\r\n      console.error('Reset password failed:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2>Reset Your Password</h2>\r\n        \r\n        {message && <div style={{ color: 'green', marginBottom: '1rem' }}>{message}</div>}\r\n        {error && <div className=\"error\">{error}</div>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            readOnly // Email should not be changed by the user\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            value={passwordConfirmation}\r\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" disabled={loading || !token}>\r\n            {loading ? 'Resetting...' : 'Reset Password'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}