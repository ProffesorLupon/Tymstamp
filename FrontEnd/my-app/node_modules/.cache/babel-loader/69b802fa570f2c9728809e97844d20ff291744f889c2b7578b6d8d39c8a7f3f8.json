{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useSearchParams}from'react-router-dom';import apiService from'../api/apiService';import'../App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const navigate=useNavigate();const[searchParams]=useSearchParams();const[token,setToken]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[passwordConfirmation,setPasswordConfirmation]=useState('');const[message,setMessage]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(false);useEffect(()=>{// Extract token and email from the URL query parameters\nconst tokenFromUrl=window.location.pathname.split('/').pop();const emailFromUrl=searchParams.get('email');setToken(tokenFromUrl);setEmail(emailFromUrl);if(!tokenFromUrl||!emailFromUrl){setError(\"Invalid password reset link. Please request a new one.\");}},[searchParams]);const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');setMessage('');if(password!==passwordConfirmation){setError(\"Passwords do not match.\");setLoading(false);return;}try{const response=await apiService.post('/reset-password',{token,email,password,password_confirmation:passwordConfirmation});setMessage(response.data.message+\" You will be redirected to login shortly.\");setTimeout(()=>navigate('/login'),3000);}catch(err){var _err$response,_err$response$data;const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'An error occurred. Please try again.';setError(errorMessage);console.error('Reset password failed:',err);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Your Password\"}),message&&/*#__PURE__*/_jsx(\"div\",{style:{color:'green',marginBottom:'1rem'},children:message}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),readOnly:true// Email should not be changed by the user\n,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm New Password\",value:passwordConfirmation,onChange:e=>setPasswordConfirmation(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!token,children:loading?'Resetting...':'Reset Password'})]})]})});};export default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","apiService","jsx","_jsx","jsxs","_jsxs","ResetPassword","navigate","searchParams","token","setToken","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","message","setMessage","error","setError","loading","setLoading","tokenFromUrl","window","location","pathname","split","pop","emailFromUrl","get","handleSubmit","e","preventDefault","response","post","password_confirmation","data","setTimeout","err","_err$response","_err$response$data","errorMessage","console","className","children","style","color","marginBottom","onSubmit","type","placeholder","value","onChange","target","readOnly","required","disabled"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport apiService from '../api/apiService';\r\nimport '../App.css';\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  \r\n  const [token, setToken] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\r\n  \r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Extract token and email from the URL query parameters\r\n    const tokenFromUrl = window.location.pathname.split('/').pop();\r\n    const emailFromUrl = searchParams.get('email');\r\n    setToken(tokenFromUrl);\r\n    setEmail(emailFromUrl);\r\n\r\n    if (!tokenFromUrl || !emailFromUrl) {\r\n        setError(\"Invalid password reset link. Please request a new one.\");\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setMessage('');\r\n\r\n    if (password !== passwordConfirmation) {\r\n        setError(\"Passwords do not match.\");\r\n        setLoading(false);\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const response = await apiService.post('/reset-password', {\r\n        token,\r\n        email,\r\n        password,\r\n        password_confirmation: passwordConfirmation,\r\n      });\r\n      setMessage(response.data.message + \" You will be redirected to login shortly.\");\r\n      setTimeout(() => navigate('/login'), 3000);\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'An error occurred. Please try again.';\r\n      setError(errorMessage);\r\n      console.error('Reset password failed:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2>Reset Your Password</h2>\r\n        \r\n        {message && <div style={{ color: 'green', marginBottom: '1rem' }}>{message}</div>}\r\n        {error && <div className=\"error\">{error}</div>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            readOnly // Email should not be changed by the user\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            value={passwordConfirmation}\r\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" disabled={loading || !token}>\r\n            {loading ? 'Resetting...' : 'Reset Password'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}