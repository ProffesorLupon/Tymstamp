{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshepiso Selemela\\\\OneDrive\\\\Documents\\\\Tymstamp\\\\FrontEnd\\\\my-app\\\\src\\\\pages\\\\ManageUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../api/apiService';\nimport UploadPhotoModal from '../components/UploadPhotoModal'; // We created this in the last batch\nimport '../styles/ManagerUsers.css'; // Correct path to the new CSS file\nimport '../App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManageUsers = () => {\n  _s();\n  // State for the new user form\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('employee');\n  const [position, setPosition] = useState('');\n  const [managerId, setManagerId] = useState('');\n\n  // State for UI feedback\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // State for data\n  const [users, setUsers] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  // State for the upload modal\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n\n  /**\r\n   * Fetches the list of users from the backend and updates the state.\r\n   */\n  const fetchUsers = async () => {\n    setLoadingUsers(true);\n    try {\n      const response = await apiService.get('/admin/users');\n      // Paginated responses nest the data in a 'data' key\n      setUsers(response.data.data || response.data);\n    } catch (err) {\n      console.error(\"Failed to fetch users:\", err);\n      setError(\"Could not load the list of existing users.\");\n    } finally {\n      setLoadingUsers(false);\n    }\n  };\n\n  // Fetch initial data (managers and users) when the component mounts.\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const [managersResponse, usersResponse] = await Promise.all([apiService.get('/admin/managers'), apiService.get('/admin/users')]);\n        setManagers(managersResponse.data);\n        setUsers(usersResponse.data.data || usersResponse.data);\n      } catch (err) {\n        setError(\"Could not load initial page data.\");\n      } finally {\n        setLoadingUsers(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  /**\r\n   * Handles the submission of the new user form.\r\n   */\n  const handleAddUser = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const response = await apiService.post('/admin/users', {\n        name,\n        email,\n        password,\n        password_confirmation: password,\n        role,\n        position,\n        manager_id: managerId || null\n      });\n      setSuccess(`User \"${response.data.user.name}\" created successfully!`);\n      // Reset form\n      setName('');\n      setEmail('');\n      setPassword('');\n      setRole('employee');\n      setPosition('');\n      setManagerId('');\n      fetchUsers(); // Refresh user list\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create user.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\r\n   * Opens the photo upload modal for a specific employee.\r\n   * @param {object} employee - The employee object from the user list.\r\n   */\n  const openUploadModal = employee => {\n    setSelectedEmployee(employee);\n    setIsUploadModalOpen(true);\n  };\n\n  /**\r\n   * Handles the actual photo upload after a file is selected in the modal.\r\n   * @param {File} file - The image file to upload.\r\n   */\n  const handlePhotoUpload = async file => {\n    if (!selectedEmployee) return;\n    const formData = new FormData();\n    formData.append('face_image', file);\n    setLoading(true);\n    try {\n      await apiService.post(`/admin/employees/${selectedEmployee.id}/upload-face`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSuccess('Photo uploaded successfully!');\n      fetchUsers(); // Refresh the user list to show the new photo\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Photo upload failed.');\n    } finally {\n      setLoading(false);\n      setIsUploadModalOpen(false);\n      setSelectedEmployee(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UploadPhotoModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onUpload: handlePhotoUpload,\n      employee: selectedEmployee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green',\n          marginBottom: '1rem'\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddUser,\n        className: \"manage-users-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"John Doe\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"user@example.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"********\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"e.g., Software Developer\",\n            value: position,\n            onChange: e => setPosition(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: role,\n            onChange: e => setRole(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"manager\",\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hr\",\n              children: \"HR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Reports To (Manager)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: managerId,\n            onChange: e => setManagerId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- No Manager --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), managers.map(manager => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: manager.employee.id,\n              children: [manager.name, \" (\", manager.role, \")\"]\n            }, manager.employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: loading,\n          children: loading ? 'Creating User...' : 'Create User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), loadingUsers ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.length > 0 ? users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.employee.face_image_path ? `${apiService.defaults.baseURL.replace('/api', '')}/storage/${user.employee.face_image_path}` : '/images/default-avatar.png',\n                alt: user.name,\n                className: \"user-avatar\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = '/images/default-avatar.png';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openUploadModal(user.employee),\n                className: \"btn-action\",\n                children: \"Upload Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: \"No users found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ManageUsers, \"1FwhN3bdrXUAR0n3sRRL79R6QgU=\");\n_c = ManageUsers;\nexport default ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["React","useState","useEffect","apiService","UploadPhotoModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ManageUsers","_s","name","setName","email","setEmail","password","setPassword","role","setRole","position","setPosition","managerId","setManagerId","error","setError","success","setSuccess","loading","setLoading","users","setUsers","managers","setManagers","loadingUsers","setLoadingUsers","isUploadModalOpen","setIsUploadModalOpen","selectedEmployee","setSelectedEmployee","fetchUsers","response","get","data","err","console","fetchInitialData","managersResponse","usersResponse","Promise","all","handleAddUser","e","preventDefault","post","password_confirmation","manager_id","user","_err$response","_err$response$data","message","openUploadModal","employee","handlePhotoUpload","file","formData","FormData","append","id","headers","_err$response2","_err$response2$data","children","isOpen","onClose","onUpload","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","marginBottom","onSubmit","type","placeholder","value","onChange","target","required","map","manager","disabled","length","src","face_image_path","defaults","baseURL","replace","alt","onError","onerror","onClick","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/pages/ManageUsers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiService from '../api/apiService';\r\nimport UploadPhotoModal from '../components/UploadPhotoModal'; // We created this in the last batch\r\nimport '../styles/ManagerUsers.css'; // Correct path to the new CSS file\r\nimport '../App.css';\r\n\r\nconst ManageUsers = () => {\r\n  // State for the new user form\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState('employee');\r\n  const [position, setPosition] = useState('');\r\n  const [managerId, setManagerId] = useState('');\r\n  \r\n  // State for UI feedback\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // State for data\r\n  const [users, setUsers] = useState([]);\r\n  const [managers, setManagers] = useState([]);\r\n  const [loadingUsers, setLoadingUsers] = useState(true);\r\n\r\n  // State for the upload modal\r\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n\r\n  /**\r\n   * Fetches the list of users from the backend and updates the state.\r\n   */\r\n  const fetchUsers = async () => {\r\n    setLoadingUsers(true);\r\n    try {\r\n      const response = await apiService.get('/admin/users');\r\n      // Paginated responses nest the data in a 'data' key\r\n      setUsers(response.data.data || response.data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch users:\", err);\r\n      setError(\"Could not load the list of existing users.\");\r\n    } finally {\r\n      setLoadingUsers(false);\r\n    }\r\n  };\r\n\r\n  // Fetch initial data (managers and users) when the component mounts.\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const [managersResponse, usersResponse] = await Promise.all([\r\n            apiService.get('/admin/managers'),\r\n            apiService.get('/admin/users')\r\n        ]);\r\n        setManagers(managersResponse.data);\r\n        setUsers(usersResponse.data.data || usersResponse.data);\r\n      } catch (err) {\r\n        setError(\"Could not load initial page data.\");\r\n      } finally {\r\n        setLoadingUsers(false);\r\n      }\r\n    };\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  /**\r\n   * Handles the submission of the new user form.\r\n   */\r\n  const handleAddUser = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      const response = await apiService.post('/admin/users', { name, email, password, password_confirmation: password, role, position, manager_id: managerId || null });\r\n      setSuccess(`User \"${response.data.user.name}\" created successfully!`);\r\n      // Reset form\r\n      setName(''); setEmail(''); setPassword(''); setRole('employee'); setPosition(''); setManagerId('');\r\n      fetchUsers(); // Refresh user list\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to create user.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Opens the photo upload modal for a specific employee.\r\n   * @param {object} employee - The employee object from the user list.\r\n   */\r\n  const openUploadModal = (employee) => {\r\n    setSelectedEmployee(employee);\r\n    setIsUploadModalOpen(true);\r\n  };\r\n\r\n  /**\r\n   * Handles the actual photo upload after a file is selected in the modal.\r\n   * @param {File} file - The image file to upload.\r\n   */\r\n  const handlePhotoUpload = async (file) => {\r\n    if (!selectedEmployee) return;\r\n    \r\n    const formData = new FormData();\r\n    formData.append('face_image', file);\r\n\r\n    setLoading(true);\r\n    try {\r\n      await apiService.post(`/admin/employees/${selectedEmployee.id}/upload-face`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setSuccess('Photo uploaded successfully!');\r\n      fetchUsers(); // Refresh the user list to show the new photo\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Photo upload failed.');\r\n    } finally {\r\n      setLoading(false);\r\n      setIsUploadModalOpen(false);\r\n      setSelectedEmployee(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UploadPhotoModal\r\n        isOpen={isUploadModalOpen}\r\n        onClose={() => setIsUploadModalOpen(false)}\r\n        onUpload={handlePhotoUpload}\r\n        employee={selectedEmployee}\r\n      />\r\n\r\n      <div className=\"section\">\r\n        <h3>Add New User</h3>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {success && <p style={{ color: 'green', marginBottom: '1rem' }}>{success}</p>}\r\n        <form onSubmit={handleAddUser} className=\"manage-users-form\">\r\n          <div>\r\n            <label>Full Name</label>\r\n            <input type=\"text\" placeholder=\"John Doe\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Email</label>\r\n            <input type=\"email\" placeholder=\"user@example.com\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" placeholder=\"********\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Position</label>\r\n            <input type=\"text\" placeholder=\"e.g., Software Developer\" value={position} onChange={(e) => setPosition(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Role</label>\r\n            <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n              <option value=\"employee\">Employee</option>\r\n              <option value=\"manager\">Manager</option>\r\n              <option value=\"hr\">HR</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label>Reports To (Manager)</label>\r\n            <select value={managerId} onChange={(e) => setManagerId(e.target.value)}>\r\n              <option value=\"\">-- No Manager --</option>\r\n              {managers.map(manager => (\r\n                <option key={manager.employee.id} value={manager.employee.id}>\r\n                  {manager.name} ({manager.role})\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n            {loading ? 'Creating User...' : 'Create User'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"section\">\r\n        <h3>Existing Users</h3>\r\n        {loadingUsers ? <p>Loading users...</p> : (\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Photo</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.length > 0 ? users.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>\r\n                    <img \r\n                      src={user.employee.face_image_path ? `${apiService.defaults.baseURL.replace('/api', '')}/storage/${user.employee.face_image_path}` : '/images/default-avatar.png'} \r\n                      alt={user.name} \r\n                      className=\"user-avatar\"\r\n                      onError={(e) => { e.target.onerror = null; e.target.src = '/images/default-avatar.png'; }}\r\n                    />\r\n                  </td>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.role}</td>\r\n                  <td>\r\n                    <button onClick={() => openUploadModal(user.employee)} className=\"btn-action\">\r\n                      Upload Photo\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )) : (\r\n                <tr><td colSpan=\"5\">No users found.</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}