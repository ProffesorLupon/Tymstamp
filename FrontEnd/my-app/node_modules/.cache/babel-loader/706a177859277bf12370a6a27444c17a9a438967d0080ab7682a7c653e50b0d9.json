{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshepiso Selemela\\\\OneDrive\\\\Documents\\\\Tymstamp\\\\FrontEnd\\\\my-app\\\\src\\\\components\\\\FacialRecognitionModal.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport '../styles/FacialRecognition.css';\n\n/**\r\n * A modal component for capturing a user's photo for facial verification.\r\n * @param {object} props\r\n * @param {boolean} props.isOpen - Controls if the modal is visible.\r\n * @param {function} props.onClose - Function to call when the modal is closed.\r\n * @param {function} props.onCapture - Function to call with the captured image data.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FacialRecognitionModal = ({\n  isOpen,\n  onClose,\n  onCapture\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState('');\n\n  // Effect to start and stop the camera stream\n  useEffect(() => {\n    if (isOpen) {\n      startCamera();\n    } else {\n      stopCamera();\n    }\n\n    // Cleanup function to stop the camera when the component unmounts\n    return () => {\n      stopCamera();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  /**\r\n   * Starts the camera and requests permission from the user.\r\n   */\n  const startCamera = async () => {\n    setError('');\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      setStream(stream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n      setError('Could not access the camera. Please ensure you have given permission.');\n    }\n  };\n\n  /**\r\n   * Stops the active camera stream.\r\n   */\n  const stopCamera = () => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n  };\n\n  /**\r\n   * Captures a photo from the video stream.\r\n   */\n  const handleCapture = () => {\n    if (videoRef.current && canvasRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n\n      // Set canvas dimensions to match the video feed\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      // Draw the current video frame onto the canvas\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n\n      // Convert the canvas image to a base64 data URL\n      const imageDataUrl = canvas.toDataURL('image/jpeg');\n\n      // Pass the captured image data to the parent component\n      onCapture(imageDataUrl);\n      onClose();\n    }\n  };\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"facial-rec-backdrop\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"facial-rec-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Facial Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please position your face in the center of the frame.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-container\",\n        children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"camera-feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"facial-rec-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCapture,\n          className: \"btn-capture\",\n          disabled: !stream || error,\n          children: \"Capture & Clock In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"btn-cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(FacialRecognitionModal, \"PrOmCr2NftPMQzhpBwj2ettfnus=\");\n_c = FacialRecognitionModal;\nexport default FacialRecognitionModal;\nvar _c;\n$RefreshReg$(_c, \"FacialRecognitionModal\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","FacialRecognitionModal","isOpen","onClose","onCapture","_s","videoRef","canvasRef","stream","setStream","error","setError","startCamera","stopCamera","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","getTracks","forEach","track","stop","handleCapture","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","imageDataUrl","toDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","display","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/components/FacialRecognitionModal.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport '../styles/FacialRecognition.css';\r\n\r\n/**\r\n * A modal component for capturing a user's photo for facial verification.\r\n * @param {object} props\r\n * @param {boolean} props.isOpen - Controls if the modal is visible.\r\n * @param {function} props.onClose - Function to call when the modal is closed.\r\n * @param {function} props.onCapture - Function to call with the captured image data.\r\n */\r\nconst FacialRecognitionModal = ({ isOpen, onClose, onCapture }) => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [stream, setStream] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  // Effect to start and stop the camera stream\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      startCamera();\r\n    } else {\r\n      stopCamera();\r\n    }\r\n\r\n    // Cleanup function to stop the camera when the component unmounts\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen]);\r\n\r\n  /**\r\n   * Starts the camera and requests permission from the user.\r\n   */\r\n  const startCamera = async () => {\r\n    setError('');\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      setStream(stream);\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error accessing camera:\", err);\r\n      setError('Could not access the camera. Please ensure you have given permission.');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Stops the active camera stream.\r\n   */\r\n  const stopCamera = () => {\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n      setStream(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Captures a photo from the video stream.\r\n   */\r\n  const handleCapture = () => {\r\n    if (videoRef.current && canvasRef.current) {\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      \r\n      // Set canvas dimensions to match the video feed\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n\r\n      // Draw the current video frame onto the canvas\r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n      \r\n      // Convert the canvas image to a base64 data URL\r\n      const imageDataUrl = canvas.toDataURL('image/jpeg');\r\n      \r\n      // Pass the captured image data to the parent component\r\n      onCapture(imageDataUrl);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"facial-rec-backdrop\">\r\n      <div className=\"facial-rec-content\">\r\n        <h3>Facial Verification</h3>\r\n        <p>Please position your face in the center of the frame.</p>\r\n        <div className=\"camera-container\">\r\n          {error ? (\r\n            <div className=\"camera-error\">{error}</div>\r\n          ) : (\r\n            <video ref={videoRef} autoPlay playsInline className=\"camera-feed\" />\r\n          )}\r\n          <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n        </div>\r\n        <div className=\"facial-rec-actions\">\r\n          <button onClick={handleCapture} className=\"btn-capture\" disabled={!stream || error}>\r\n            Capture & Clock In\r\n          </button>\r\n          <button onClick={onClose} className=\"btn-cancel\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacialRecognitionModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,iCAAiC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,IAAIK,MAAM,EAAE;MACVU,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACLC,UAAU,CAAC,CAAC;IACd;;IAEA;IACA,OAAO,MAAM;MACXA,UAAU,CAAC,CAAC;IACd,CAAC;IACH;EACA,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;;EAEZ;AACF;AACA;EACE,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMH,MAAM,GAAG,MAAMM,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzER,SAAS,CAACD,MAAM,CAAC;MACjB,IAAIF,QAAQ,CAACY,OAAO,EAAE;QACpBZ,QAAQ,CAACY,OAAO,CAACC,SAAS,GAAGX,MAAM;MACrC;IACF,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACX,KAAK,CAAC,yBAAyB,EAAEU,GAAG,CAAC;MAC7CT,QAAQ,CAAC,uEAAuE,CAAC;IACnF;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIL,MAAM,EAAE;MACVA,MAAM,CAACc,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACjDhB,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMiB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIpB,QAAQ,CAACY,OAAO,IAAIX,SAAS,CAACW,OAAO,EAAE;MACzC,MAAMD,KAAK,GAAGX,QAAQ,CAACY,OAAO;MAC9B,MAAMS,MAAM,GAAGpB,SAAS,CAACW,OAAO;;MAEhC;MACAS,MAAM,CAACC,KAAK,GAAGX,KAAK,CAACY,UAAU;MAC/BF,MAAM,CAACG,MAAM,GAAGb,KAAK,CAACc,WAAW;;MAEjC;MACA,MAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MACvCD,OAAO,CAACE,SAAS,CAACjB,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACY,UAAU,EAAEZ,KAAK,CAACc,WAAW,CAAC;;MAEnE;MACA,MAAMI,YAAY,GAAGR,MAAM,CAACS,SAAS,CAAC,YAAY,CAAC;;MAEnD;MACAhC,SAAS,CAAC+B,YAAY,CAAC;MACvBhC,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,IAAI,CAACD,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,oBACEF,OAAA;IAAKqC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCtC,OAAA;MAAKqC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCtC,OAAA;QAAAsC,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B1C,OAAA;QAAAsC,QAAA,EAAG;MAAqD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5D1C,OAAA;QAAKqC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAC9B5B,KAAK,gBACJV,OAAA;UAAKqC,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAE5B;QAAK;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAE3C1C,OAAA;UAAO2C,GAAG,EAAErC,QAAS;UAACsC,QAAQ;UAACC,WAAW;UAACR,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACrE,eACD1C,OAAA;UAAQ2C,GAAG,EAAEpC,SAAU;UAACuC,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAO;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCtC,OAAA;UAAQgD,OAAO,EAAEtB,aAAc;UAACW,SAAS,EAAC,aAAa;UAACY,QAAQ,EAAE,CAACzC,MAAM,IAAIE,KAAM;UAAA4B,QAAA,EAAC;QAEpF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1C,OAAA;UAAQgD,OAAO,EAAE7C,OAAQ;UAACkC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrC,EAAA,CArGIJ,sBAAsB;AAAAiD,EAAA,GAAtBjD,sBAAsB;AAuG5B,eAAeA,sBAAsB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}