{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshepiso Selemela\\\\OneDrive\\\\Documents\\\\Tymstamp\\\\FrontEnd\\\\my-app\\\\src\\\\pages\\\\LeaveHistoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../api/apiService';\nimport '../Dashboard.css'; // Using Dashboard.css for consistent styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LeaveHistoryPage = () => {\n  _s();\n  const [leaveRequests, setLeaveRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchLeaveHistory = async () => {\n      setLoading(true);\n      try {\n        const response = await apiService.get('/leave/history');\n        // Assuming the data is nested under a 'data' key\n        setLeaveRequests(response.data.data || response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch leave history:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLeaveHistory();\n  }, []);\n\n  // This component now returns only its specific content.\n  // The PageLayout component will provide the title and main container.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading history...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason for Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manager's Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaveRequests.length > 0 ? leaveRequests.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [new Date(log.start_date).toLocaleDateString(), \" - \", new Date(log.end_date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.leave_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge ${log.status === 'approved' ? 'status-approved' : log.status === 'rejected' ? 'status-rejected' : 'status-pending'}`,\n              children: log.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.status === 'rejected' ? log.rejection_reason : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No leave history found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(LeaveHistoryPage, \"erWHR2HZXlUs4uz4cBEHUJGCvVs=\");\n_c = LeaveHistoryPage;\nexport default LeaveHistoryPage;\nvar _c;\n$RefreshReg$(_c, \"LeaveHistoryPage\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","LeaveHistoryPage","_s","leaveRequests","setLeaveRequests","loading","setLoading","fetchLeaveHistory","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","log","Date","start_date","toLocaleDateString","end_date","leave_type","reason","status","rejection_reason","id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/pages/LeaveHistoryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiService from '../api/apiService';\r\nimport '../Dashboard.css'; // Using Dashboard.css for consistent styling\r\n\r\nconst LeaveHistoryPage = () => {\r\n  const [leaveRequests, setLeaveRequests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLeaveHistory = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await apiService.get('/leave/history');\r\n        // Assuming the data is nested under a 'data' key\r\n        setLeaveRequests(response.data.data || response.data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch leave history:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchLeaveHistory();\r\n  }, []);\r\n\r\n  // This component now returns only its specific content.\r\n  // The PageLayout component will provide the title and main container.\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <p>Loading history...</p>\r\n      ) : (\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Dates</th>\r\n              <th>Type</th>\r\n              <th>Reason for Request</th>\r\n              <th>Status</th>\r\n              <th>Manager's Comment</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {leaveRequests.length > 0 ? (\r\n              leaveRequests.map((log) => (\r\n                <tr key={log.id}>\r\n                  <td>{new Date(log.start_date).toLocaleDateString()} - {new Date(log.end_date).toLocaleDateString()}</td>\r\n                  <td>{log.leave_type}</td>\r\n                  <td>{log.reason}</td>\r\n                  <td>\r\n                    <span className={`badge ${\r\n                      log.status === 'approved' ? 'status-approved' : \r\n                      log.status === 'rejected' ? 'status-rejected' : \r\n                      'status-pending'\r\n                    }`}>\r\n                      {log.status}\r\n                    </span>\r\n                  </td>\r\n                  {/* Display the rejection reason if the request was rejected */}\r\n                  <td>{log.status === 'rejected' ? log.rejection_reason : 'N/A'}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr><td colSpan=\"5\">No leave history found.</td></tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveHistoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}