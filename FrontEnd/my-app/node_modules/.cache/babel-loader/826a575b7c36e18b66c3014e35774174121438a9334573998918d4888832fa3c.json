{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tshepiso Selemela\\\\OneDrive\\\\Documents\\\\Tymstamp\\\\FrontEnd\\\\my-app\\\\src\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user,\n    token,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  if (!token || !user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If a user has a role that should see the admin dashboard but lands on the employee one, redirect them.\n  if (['admin', 'manager', 'hr'].includes(user.role) && location.pathname === '/dashboard') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/admindashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // If not allowed, redirect to their default dashboard\n    const defaultDashboard = ['admin', 'manager', 'hr'].includes(user.role) ? '/admindashboard' : '/dashboard';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: defaultDashboard,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"5FMFstMc/VwDyR2D1dLxO3cyxKo=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","user","token","loading","location","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","includes","role","pathname","defaultDashboard","_c","$RefreshReg$"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\n\nconst ProtectedRoute = ({ children, allowedRoles }) => {\n  const { user, token, loading } = useAuth();\n  const location = useLocation();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!token || !user) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If a user has a role that should see the admin dashboard but lands on the employee one, redirect them.\n  if (['admin', 'manager', 'hr'].includes(user.role) && location.pathname === '/dashboard') {\n    return <Navigate to=\"/admindashboard\" replace />;\n  }\n\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\n    // If not allowed, redirect to their default dashboard\n    const defaultDashboard = ['admin', 'manager', 'hr'].includes(user.role) ? '/admindashboard' : '/dashboard';\n    return <Navigate to={defaultDashboard} replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC1C,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,IAAIU,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACN,KAAK,IAAI,CAACD,IAAI,EAAE;IACnB,oBAAOL,OAAA,CAACJ,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEP;MAAS,CAAE;MAACQ,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAACK,QAAQ,CAACZ,IAAI,CAACa,IAAI,CAAC,IAAIV,QAAQ,CAACW,QAAQ,KAAK,YAAY,EAAE;IACxF,oBAAOnB,OAAA,CAACJ,QAAQ;MAACiB,EAAE,EAAC,iBAAiB;MAACG,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClD;EAEA,IAAIT,YAAY,IAAI,CAACA,YAAY,CAACc,QAAQ,CAACZ,IAAI,CAACa,IAAI,CAAC,EAAE;IACrD;IACA,MAAME,gBAAgB,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAACH,QAAQ,CAACZ,IAAI,CAACa,IAAI,CAAC,GAAG,iBAAiB,GAAG,YAAY;IAC1G,oBAAOlB,OAAA,CAACJ,QAAQ;MAACiB,EAAE,EAAEO,gBAAiB;MAACJ,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnD;EAEA,OAAOV,QAAQ;AACjB,CAAC;AAACE,EAAA,CAxBIH,cAAc;EAAA,QACeH,OAAO,EACvBD,WAAW;AAAA;AAAAwB,EAAA,GAFxBpB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}