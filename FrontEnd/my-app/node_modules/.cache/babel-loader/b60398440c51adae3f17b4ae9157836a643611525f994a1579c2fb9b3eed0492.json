{"ast":null,"code":"import React,{useState,useEffect}from'react';import apiService from'../api/apiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TravelLogs=()=>{const[travelLogs,setTravelLogs]=useState([]);const[activeTrip,setActiveTrip]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const fetchTravelLogs=async()=>{setLoading(true);try{const response=await apiService.get('/trips');const allTrips=response.data.data;const active=allTrips.find(trip=>trip.status==='started');const completed=allTrips.filter(trip=>trip.status!=='started');setActiveTrip(active);setTravelLogs(completed);}catch(error){console.error(\"Failed to fetch travel logs:\",error);setError('Could not load travel logs.');}finally{setLoading(false);}};useEffect(()=>{fetchTravelLogs();},[]);const handleEndTrip=async()=>{if(!activeTrip)return;const endLocation=prompt(\"Please enter your end location (e.g., Client Office):\");if(!endLocation){alert(\"End location is required to stop a trip.\");return;}try{const position=await new Promise((resolve,reject)=>{navigator.geolocation.getCurrentPosition(resolve,reject);});const{latitude,longitude}=position.coords;await apiService.post(`/trips/end`,{trip_id:activeTrip.id,// Assuming backend can get trip from user, but sending id is safer\nend_location:endLocation,end_latitude:latitude,end_longitude:longitude});alert('Trip ended successfully!');// Refresh the logs\nfetchTravelLogs();}catch(err){console.error('Failed to end trip:',err);alert('Error: Could not end the trip.');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading travel logs...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"dashboard-header\",children:\"Travel Logs\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),activeTrip&&/*#__PURE__*/_jsxs(\"div\",{className:\"section active-trip\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Active Trip\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Purpose:\"}),\" \",activeTrip.purpose]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Started At:\"}),\" \",new Date(activeTrip.start_time).toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"From:\"}),\" \",activeTrip.start_location]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEndTrip,className:\"btn btn-danger\",children:\"End Trip\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Completed Trips\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Purpose\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Route\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Distance (km)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Duration\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:travelLogs.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:\"No completed travel logs.\"})}):travelLogs.map(log=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:new Date(log.start_time).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:log.purpose}),/*#__PURE__*/_jsxs(\"td\",{children:[log.start_location,\" to \",log.end_location]}),/*#__PURE__*/_jsx(\"td\",{children:parseFloat(log.distance).toFixed(2)}),/*#__PURE__*/_jsx(\"td\",{children:log.start_time&&log.end_time?`${Math.round((new Date(log.end_time)-new Date(log.start_time))/60000)} mins`:'N/A'})]},log.id))})]})]})]});};export default TravelLogs;","map":{"version":3,"names":["React","useState","useEffect","apiService","jsx","_jsx","jsxs","_jsxs","TravelLogs","travelLogs","setTravelLogs","activeTrip","setActiveTrip","loading","setLoading","error","setError","fetchTravelLogs","response","get","allTrips","data","active","find","trip","status","completed","filter","console","handleEndTrip","endLocation","prompt","alert","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","post","trip_id","id","end_location","end_latitude","end_longitude","err","className","children","purpose","Date","start_time","toLocaleString","start_location","onClick","length","colSpan","map","log","toLocaleDateString","parseFloat","distance","toFixed","end_time","Math","round"],"sources":["C:/Users/Tshepiso Selemela/OneDrive/Documents/Tymstamp/FrontEnd/my-app/src/pages/TravelLogs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiService from '../api/apiService';\r\n\r\nconst TravelLogs = () => {\r\n  const [travelLogs, setTravelLogs] = useState([]);\r\n  const [activeTrip, setActiveTrip] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchTravelLogs = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await apiService.get('/trips');\r\n      const allTrips = response.data.data;\r\n      \r\n      const active = allTrips.find(trip => trip.status === 'started');\r\n      const completed = allTrips.filter(trip => trip.status !== 'started');\r\n      \r\n      setActiveTrip(active);\r\n      setTravelLogs(completed);\r\n\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch travel logs:\", error);\r\n      setError('Could not load travel logs.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTravelLogs();\r\n  }, []);\r\n\r\n  const handleEndTrip = async () => {\r\n    if (!activeTrip) return;\r\n\r\n    const endLocation = prompt(\"Please enter your end location (e.g., Client Office):\");\r\n    if (!endLocation) {\r\n      alert(\"End location is required to stop a trip.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject);\r\n      });\r\n      const { latitude, longitude } = position.coords;\r\n\r\n      await apiService.post(`/trips/end`, {\r\n        trip_id: activeTrip.id, // Assuming backend can get trip from user, but sending id is safer\r\n        end_location: endLocation,\r\n        end_latitude: latitude,\r\n        end_longitude: longitude,\r\n      });\r\n\r\n      alert('Trip ended successfully!');\r\n      // Refresh the logs\r\n      fetchTravelLogs();\r\n\r\n    } catch (err) {\r\n      console.error('Failed to end trip:', err);\r\n      alert('Error: Could not end the trip.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"dashboard\"><p>Loading travel logs...</p></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2 className=\"dashboard-header\">Travel Logs</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      \r\n      {activeTrip && (\r\n        <div className=\"section active-trip\">\r\n          <h3>Active Trip</h3>\r\n          <p><strong>Purpose:</strong> {activeTrip.purpose}</p>\r\n          <p><strong>Started At:</strong> {new Date(activeTrip.start_time).toLocaleString()}</p>\r\n          <p><strong>From:</strong> {activeTrip.start_location}</p>\r\n          <button onClick={handleEndTrip} className=\"btn btn-danger\">End Trip</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"section\">\r\n        <h3>Completed Trips</h3>\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Purpose</th>\r\n              <th>Route</th>\r\n              <th>Distance (km)</th>\r\n              <th>Duration</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {travelLogs.length === 0 ? (\r\n              <tr><td colSpan=\"5\">No completed travel logs.</td></tr>\r\n            ) : (\r\n              travelLogs.map((log) => (\r\n                <tr key={log.id}>\r\n                  <td>{new Date(log.start_time).toLocaleDateString()}</td>\r\n                  <td>{log.purpose}</td>\r\n                  <td>{log.start_location} to {log.end_location}</td>\r\n                  <td>{parseFloat(log.distance).toFixed(2)}</td>\r\n                  <td>\r\n                    {log.start_time && log.end_time\r\n                      ? `${Math.round((new Date(log.end_time) - new Date(log.start_time)) / 60000)} mins`\r\n                      : 'N/A'}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelLogs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}